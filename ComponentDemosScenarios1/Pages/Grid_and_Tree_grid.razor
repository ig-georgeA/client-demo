@page "/grid_and_tree_grid"
@using IG_NorthwindAPI
@using Models.IG_NorthwindAPI
@using System.Reactive.Subjects
@using System.Reactive.Linq
@inject IIG_NorthwindAPIService IG_NorthwindAPIService
@implements IDisposable;

<div class="column-layout grid-and-tree-grid-container">
    <div class="row-layout group">
        <IgbGrid PrimaryKey="CustomerId" RowSelection="GridSelectionMode.Multiple" RowEditable="true" PagingMode="GridPagingMode.Remote" Moving="true" AllowFiltering="true" FilterMode="FilterMode.ExcelStyleFilter" Data="@_basicGrid1_Data_Request?.Items" class="ig-typography list" grid_and_tree_grid-scope>
            <IgbGridToolbar>
                <IgbGridToolbarActions>
                    <IgbGridToolbarPinning></IgbGridToolbarPinning>
                    <IgbGridToolbarHiding></IgbGridToolbarHiding>
                </IgbGridToolbarActions>
                <IgbGridToolbarTitle>Excel style filtering &amp; remote paging</IgbGridToolbarTitle>
            </IgbGridToolbar>
            <IgbPaginator PerPage="@BasicGrid1_Page_Size" TotalRecords="@_basicGrid1_Data_Request?.TotalRecordsCount" Page="@BasicGrid1_Page_Index" PageChange="PaginatorPageChange" PerPageChange="PaginatorPerPageChange"></IgbPaginator>
            <IgbColumn Field="CustomerId" DataType="GridColumnDataType.String" Header="customerId" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="CompanyName" DataType="GridColumnDataType.String" Header="companyName" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="ContactName" DataType="GridColumnDataType.String" Header="contactName" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="ContactTitle" DataType="GridColumnDataType.String" Header="contactTitle" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.Street" DataType="GridColumnDataType.String" Header="address street" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.City" DataType="GridColumnDataType.String" Header="address city" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.Region" DataType="GridColumnDataType.String" Header="address region" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.PostalCode" DataType="GridColumnDataType.String" Header="address postalCode" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.Country" DataType="GridColumnDataType.String" Header="address country" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.Phone" DataType="GridColumnDataType.String" Header="address phone" Groupable="true" Sortable="true" Resizable="true" Selectable="false"></IgbColumn>
        </IgbGrid>
        <IgbTreeGrid Data="@_iGNorthwindAPIEmployeeDto" PrimaryKey="EmployeeId" ForeignKey="ReportsTo" PagingMode="GridPagingMode.Remote" AllowFiltering="true" FilterMode="FilterMode.QuickFilter" AutoGenerate="false" class="ig-typography list" grid_and_tree_grid-scope>
            <IgbGridToolbar>
                <IgbGridToolbarTitle>Tree grid</IgbGridToolbarTitle>
            </IgbGridToolbar>
            <IgbColumn Field="LastName" DataType="GridColumnDataType.String" Header="lastName" Width="199px" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="FirstName" DataType="GridColumnDataType.String" Header="firstName" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Title" DataType="GridColumnDataType.String" Header="title" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="EmployeeId" DataType="GridColumnDataType.Number" Header="employeeId" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="ReportsTo" DataType="GridColumnDataType.Number" Header="reportsTo" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="TitleOfCourtesy" DataType="GridColumnDataType.String" Header="titleOfCourtesy" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="BirthDate" DataType="GridColumnDataType.Date" Header="birthDate" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="HireDate" DataType="GridColumnDataType.Date" Header="hireDate" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="AddressId" DataType="GridColumnDataType.String" Header="addressId" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.Street" DataType="GridColumnDataType.String" Header="address street" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.City" DataType="GridColumnDataType.String" Header="address city" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.Region" DataType="GridColumnDataType.String" Header="address region" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.PostalCode" DataType="GridColumnDataType.String" Header="address postalCode" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.Country" DataType="GridColumnDataType.String" Header="address country" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Address.Phone" DataType="GridColumnDataType.String" Header="address phone" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="Notes" DataType="GridColumnDataType.String" Header="notes" Sortable="true" Selectable="false"></IgbColumn>
            <IgbColumn Field="AvatarUrl" DataType="GridColumnDataType.String" Header="avatarUrl" Sortable="true" Selectable="false"></IgbColumn>
        </IgbTreeGrid>
    </div>
</div>

@code {
    private double _basicGrid1_Page_Size = 15;
    public double BasicGrid1_Page_Size
    {
        get => _basicGrid1_Page_Size;
        set
        {
            _basicGrid1_Page_Size = value;
            _basicGrid1_Data_RequestSubject.OnNext(value);
        }
    }

    private CustomerDtoPagedResultDto _basicGrid1_Data_Request;
    private Subject<object> _basicGrid1_Data_RequestSubject = new Subject<object>();

    private double _basicGrid1_Page_Index = 0;
    public double BasicGrid1_Page_Index
    {
        get => _basicGrid1_Page_Index;
        set
        {
            _basicGrid1_Page_Index = value;
            _basicGrid1_Data_RequestSubject.OnNext(value);
        }
    }

    private List<EmployeeDto> _iGNorthwindAPIEmployeeDto = new();
    private Subject<object> destroy = new();

    public void PaginatorPageChange(IgbNumberEventArgs e)
    {
        this.BasicGrid1_Page_Index = (double)e.Detail;
    }

    public void PaginatorPerPageChange(IgbNumberEventArgs e)
    {
        this.BasicGrid1_Page_Size = (double)e.Detail;
    }

    protected override async Task OnInitializedAsync()
    {
        _basicGrid1_Data_Request = await IG_NorthwindAPIService.GetCustomerDtoPagedResultDto((int)BasicGrid1_Page_Index, (int)BasicGrid1_Page_Size, default);
        _basicGrid1_Data_RequestSubject.TakeUntil(this.destroy).Subscribe(async _ =>
        {
            _basicGrid1_Data_Request = await IG_NorthwindAPIService.GetCustomerDtoPagedResultDto((int)BasicGrid1_Page_Index, (int)BasicGrid1_Page_Size, default);
            await InvokeAsync(StateHasChanged);
        });
        _iGNorthwindAPIEmployeeDto = await IG_NorthwindAPIService.GetEmployeeDtoList();
        await base.OnInitializedAsync();
    }

    public void Dispose()
    {
        this.destroy.OnNext(null);
        this.destroy.Dispose();
    }
}
